name: Deploy to iPage

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: '18'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests (if available)
      run: npm run test --if-present

    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production

    - name: Create deployment package
      run: |
        mkdir -p deploy
        cp -r out/* deploy/
        cd deploy
        zip -r ../cetal-deve-solutions-${{ github.sha }}.zip .

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: deploy/
        retention-days: 30

    # FTP deployment to iPage
    - name: Deploy to iPage via FTP
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./deploy/
        server-dir: /htdocs/
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.next/cache/**
          **/.env*
          **/README.md

  # Alternative deployment using rsync (if SSH is available)
  deploy-ssh:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: false # Set to true if you prefer SSH deployment
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: ./deploy

    - name: Deploy via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT || 22 }}
        script: |
          cd /path/to/your/web/directory
          rm -rf *
          
    - name: Copy files via SCP
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT || 22 }}
        source: "./deploy/*"
        target: "/path/to/your/web/directory"
        strip_components: 1
